defmodule Groove.Repo.Migrations.AddWork do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:working_users, primary_key: false) do
      add :id,
          references(:users,
            column: :id,
            name: "working_users_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :work_id, :uuid, null: false
      add :start_at, :utc_datetime, null: false, default: fragment("now()")
    end

    create table(:work_shifts, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :user_id, :uuid, null: false
      add :work_id, :uuid, null: false
      add :start_at, :utc_datetime, null: false
      add :end_at, :utc_datetime
    end

    create index(:work_shifts, ["work_id"])

    create index(:work_shifts, ["user_id"])
  end

  def down do
    drop_if_exists index(:work_shifts, ["user_id"], name: "work_shifts_user_id_index")

    drop_if_exists index(:work_shifts, ["work_id"], name: "work_shifts_work_id_index")

    drop table(:work_shifts)

    drop constraint(:working_users, "working_users_id_fkey")

    drop table(:working_users)
  end
end